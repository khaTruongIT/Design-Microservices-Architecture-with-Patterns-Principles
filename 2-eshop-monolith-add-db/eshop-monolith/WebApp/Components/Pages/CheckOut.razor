@page "/checkout"  
@inject EShopDbContext EShopDbContext  
@inject NavigationManager NavigationManager  
@rendermode InteractiveServer  

<PageTitle>CheckOut</PageTitle>  

<h1>CheckOut</h1>

@if (!isCheckoutCompleted)
{
   <div class="row">   
       <div class="col-md-6">       
           <EditForm method="post" Model="Order" OnValidSubmit="PerformCheckout" FormName="create" Enhance>
               <DataAnnotationsValidator />
               <ValidationSummary class="text-danger" role="alert" />
               <div class="mb-3">
                   <label for="firstName" class="form-label">First Name:</label>
                   <InputText id="firstName" @bind-Value="Order.FirstName" class="form-control" />
                   <ValidationMessage For="() => Order.FirstName" class="text-danger" />
               </div>
               <div class="mb-3">
                   <label for="lastName" class="form-label">Last Name:</label>
                   <InputText id="lastName" @bind-Value="Order.LastName" class="form-control" />
                   <ValidationMessage For="() => Order.LastName" class="text-danger" />
               </div>
               <div class="mb-3">
                   <label for="emailAddress" class="form-label">EmailAddress:</label>
                   <InputText id="emailAddress" @bind-Value="Order.EmailAddress" class="form-control" />
                   <ValidationMessage For="() => Order.EmailAddress" class="text-danger" />
               </div>
               <div class="mb-3">
                   <label for="addressLine" class="form-label">AddressLine:</label>
                   <InputText id="addressLine" @bind-Value="Order.AddressLine" class="form-control" />
                   <ValidationMessage For="() => Order.AddressLine" class="text-danger" />
               </div>
               <button type="submit" class="btn btn-primary">CheckOut</button>
           </EditForm>
       </div>

       <div class="col-md-6">
           <h3>Shopping Cart</h3>
           <p><strong>User:</strong> @basket.UserName</p>

           <table class="table">
               <thead>
                   <tr>
                       <th>Product</th>
                       <th>Price</th>
                       <th>Quantity</th>
                       <th>Total</th>
                   </tr>
               </thead>
               <tbody>
                   @foreach (var item in basket.Items)
                   {
                       <tr>
                           <td>@item.ProductName</td>
                           <td>@item.Price.ToString("C2")</td>
                           <td>@item.Quantity</td>
                           <td>@(item.Price * item.Quantity)</td>
                       </tr>
                   }
               </tbody>
               <tfoot>
                   <tr>
                       <td colspan="3" class="text-end"><strong>Total Price:</strong></td>
                       <td colspan="2">@basket.TotalPrice.ToString("C2")</td>
                   </tr>
               </tfoot>
           </table>

           <button class="btn btn-secondary" @onclick="NavigateToCart">Back to Cart</button>
       </div>
   </div>
}
else
{
   <div class="text-center">
       <h2>Thank you for your order!</h2>
       <p>Your checkout operation was successfully completed.</p>
       <button class="btn btn-primary" @onclick="NavigateToOrders">See Orders</button>
   </div>
}

@code {
   private ShoppingCart basket = new();
   private Order Order = new();  
   private bool isCheckoutCompleted = false;

   protected override async Task OnInitializedAsync()
   {  
       basket = await EShopDbContext.LoadUserBasket();       
   }

   private async Task PerformCheckout()  
   {        
       Order.UserName = basket.UserName;
       Order.TotalPrice = basket.TotalPrice;

       EShopDbContext.Orders.Add(Order);
       EShopDbContext.ShoppingCarts.Remove(basket);

       await EShopDbContext.SaveChangesAsync();

       // Mark checkout as completed
       isCheckoutCompleted = true;
   }   

   private void NavigateToCart()
   {
       NavigationManager.NavigateTo("/cart");
   }

   private void NavigateToOrders()
   {
       NavigationManager.NavigateTo("/orders");
   }
}
